// Copyright (C) 2012-2014  Jan-Erik Matthies
// kernel for summe
kernel void VectorAdd(global const float* a, global const float* b, global float* c, int numElements){
	int iGID = get_global_id(0);
	
	if(iGID >= numElements){
		return;
	}
	
	c[iGID] = a[iGID] + b[iGID];
}


kernel void summe3(global const float* a, global const float* b, global const float* c,  global float* res, int numElements){
	int iGID = get_global_id(0);
	
	if(iGID >= numElements){
		return;
	}
	
	res[iGID] = a[iGID] + b[iGID] + c[iGID];
}

kernel void summe3ABS(global const float* a, global const float* b, global const float* c,  global float* res, int numElements){
	int iGID = get_global_id(0);
	
	if(iGID >= numElements){
		return;
	}
	
	if(a[iGID] < 0){
		res[iGID] = 0 - a[iGID];
	}else{
		res[iGID] = a[iGID];
	}
	
	if(b[iGID] < 0){
		res[iGID] = res[iGID] - b[iGID];
	}else{
		res[iGID] = res[iGID] + b[iGID];
	}
	
	if(c[iGID] < 0){
		res[iGID] = res[iGID] - c[iGID];
	}else{
		res[iGID] = res[iGID] + c[iGID];
	}
	
}