// Copyright (C) 2012-2014  Jan-Erik Matthies
// kernel for summe
kernel void VectorAdd(global const float* a, global const float* b, global float* c, int numElements){
	int iGID = get_global_id(0);
	
	if(iGID >= numElements){
		return;
	}
	
	c[iGID] = a[iGID] + b[iGID];
}


kernel void summe3(global const float* a, global const float* b, global const float* c,  global float* res, int numElements){
	int iGID = get_global_id(0);
	
	if(iGID >= numElements){
		return;
	}
	
	res[iGID] = a[iGID] + b[iGID] + c[iGID];
}

kernel void summe3ABS(global const float* a, global const float* b, global const float* c,  global float* res, int numElements){
	int iGID = get_global_id(0);
	
	if(iGID >= numElements){
		return;
	}
	
	res[iGID] = abs(a[iGID]) + abs(b[iGID]) + abs(c[iGID]);
}